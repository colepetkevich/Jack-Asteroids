function RotatablePoly4.new 0
push constant 15
call Memory.alloc 1
pop pointer 0
push argument 0
call Float.new 1
pop this 4
push argument 1
call Float.new 1
pop this 5
push constant 4
call Array.new 1
pop this 0
push constant 4
call Array.new 1
pop this 1
push constant 4
call Array.new 1
pop this 2
push constant 4
call Array.new 1
pop this 3
call Angle.new 0
pop this 10
push argument 2
pop this 6
push argument 3
pop this 11
push argument 4
pop this 7
push argument 5
pop this 12
push argument 6
pop this 8
push argument 7
pop this 13
push argument 8
pop this 9
push argument 9
pop this 14
push pointer 0
call RotatablePoly4.calcPos 1
pop temp 0
push pointer 0
call RotatablePoly4.copyPoints 1
pop temp 0
push pointer 0
return
function RotatablePoly4.dispose 0
push argument 0
pop pointer 0
push this 0
call Array.dispose 1
pop temp 0
push this 1
call Array.dispose 1
pop temp 0
push this 2
call Array.dispose 1
pop temp 0
push this 3
call Array.dispose 1
pop temp 0
push this 4
call Float.dispose 1
pop temp 0
push this 5
call Float.dispose 1
pop temp 0
push this 6
call Float.dispose 1
pop temp 0
push this 7
call Float.dispose 1
pop temp 0
push this 8
call Float.dispose 1
pop temp 0
push this 9
call Float.dispose 1
pop temp 0
push this 10
call Angle.dispose 1
pop temp 0
push this 11
call Angle.dispose 1
pop temp 0
push this 12
call Angle.dispose 1
pop temp 0
push this 13
call Angle.dispose 1
pop temp 0
push this 14
call Angle.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function RotatablePoly4.getX 0
push argument 0
pop pointer 0
push this 4
return
function RotatablePoly4.getY 0
push argument 0
pop pointer 0
push this 5
return
function RotatablePoly4.getAngle 0
push argument 0
pop pointer 0
push this 10
return
function RotatablePoly4.move 0
push argument 0
pop pointer 0
push this 4
push argument 1
call Float.add 2
pop temp 0
push this 5
push argument 2
call Float.add 2
pop temp 0
push constant 0
return
function RotatablePoly4.rotate 0
push argument 0
pop pointer 0
push this 10
push argument 1
call Angle.rotate 2
pop temp 0
push constant 0
return
function RotatablePoly4.rotateBack 0
push argument 0
pop pointer 0
push this 10
push argument 1
call Angle.rotateBack 2
pop temp 0
push constant 0
return
function RotatablePoly4.draw 0
push argument 0
pop pointer 0
push pointer 0
call RotatablePoly4.calcPos 1
pop temp 0
push pointer 0
call RotatablePoly4.erasePrev 1
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
push this 0
push this 1
call RotatablePoly4.drawLines 3
pop temp 0
push pointer 0
call RotatablePoly4.copyPoints 1
pop temp 0
push constant 0
return
function RotatablePoly4.erasePrev 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
push this 2
push this 3
call RotatablePoly4.drawLines 3
pop temp 0
push constant 0
return
function RotatablePoly4.copyPoints 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 4
lt
not
if-goto WHILE_END0
push local 0
push this 2
add
push local 0
push this 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 3
add
push local 0
push this 1
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function RotatablePoly4.drawLines 0
push argument 0
pop pointer 0
push constant 0
push argument 1
add
pop pointer 1
push that 0
call Main.fx 1
push constant 0
push argument 2
add
pop pointer 1
push that 0
call Main.fy 1
push constant 1
push argument 1
add
pop pointer 1
push that 0
call Main.fx 1
push constant 1
push argument 2
add
pop pointer 1
push that 0
call Main.fy 1
call Screen.drawLine 4
pop temp 0
push constant 1
push argument 1
add
pop pointer 1
push that 0
call Main.fx 1
push constant 1
push argument 2
add
pop pointer 1
push that 0
call Main.fy 1
push constant 2
push argument 1
add
pop pointer 1
push that 0
call Main.fx 1
push constant 2
push argument 2
add
pop pointer 1
push that 0
call Main.fy 1
call Screen.drawLine 4
pop temp 0
push constant 2
push argument 1
add
pop pointer 1
push that 0
call Main.fx 1
push constant 2
push argument 2
add
pop pointer 1
push that 0
call Main.fy 1
push constant 3
push argument 1
add
pop pointer 1
push that 0
call Main.fx 1
push constant 3
push argument 2
add
pop pointer 1
push that 0
call Main.fy 1
call Screen.drawLine 4
pop temp 0
push constant 3
push argument 1
add
pop pointer 1
push that 0
call Main.fx 1
push constant 3
push argument 2
add
pop pointer 1
push that 0
call Main.fy 1
push constant 0
push argument 1
add
pop pointer 1
push that 0
call Main.fx 1
push constant 0
push argument 2
add
pop pointer 1
push that 0
call Main.fy 1
call Screen.drawLine 4
pop temp 0
push constant 0
return
function RotatablePoly4.calcPos 5
push argument 0
pop pointer 0
push this 4
call Float.toInt 1
pop local 3
push this 5
call Float.toInt 1
pop local 4
push this 10
call Angle.new1 1
pop local 0
push local 0
push this 11
call Angle.toFloat 1
call Angle.rotate 2
pop temp 0
push local 0
call Float.cos 1
pop local 1
push local 0
call Float.sin 1
pop local 2
push local 1
push this 6
call Float.mult 2
pop temp 0
push local 2
push this 6
call Float.mult 2
pop temp 0
push constant 0
push this 0
add
push local 3
push local 1
call Float.toInt 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push this 1
add
push local 4
push local 2
call Float.toInt 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
call Angle.dispose 1
pop temp 0
push local 1
call Float.dispose 1
pop temp 0
push local 2
call Float.dispose 1
pop temp 0
push this 10
call Angle.new1 1
pop local 0
push local 0
push this 12
call Angle.toFloat 1
call Angle.rotate 2
pop temp 0
push local 0
call Float.cos 1
pop local 1
push local 0
call Float.sin 1
pop local 2
push local 1
push this 7
call Float.mult 2
pop temp 0
push local 2
push this 7
call Float.mult 2
pop temp 0
push constant 1
push this 0
add
push local 3
push local 1
call Float.toInt 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 1
add
push local 4
push local 2
call Float.toInt 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
call Angle.dispose 1
pop temp 0
push local 1
call Float.dispose 1
pop temp 0
push local 2
call Float.dispose 1
pop temp 0
push this 10
call Angle.new1 1
pop local 0
push local 0
push this 13
call Angle.toFloat 1
call Angle.rotate 2
pop temp 0
push local 0
call Float.cos 1
pop local 1
push local 0
call Float.sin 1
pop local 2
push local 1
push this 8
call Float.mult 2
pop temp 0
push local 2
push this 8
call Float.mult 2
pop temp 0
push constant 2
push this 0
add
push local 3
push local 1
call Float.toInt 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 1
add
push local 4
push local 2
call Float.toInt 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
call Angle.dispose 1
pop temp 0
push local 1
call Float.dispose 1
pop temp 0
push local 2
call Float.dispose 1
pop temp 0
push this 10
call Angle.new1 1
pop local 0
push local 0
push this 14
call Angle.toFloat 1
call Angle.rotate 2
pop temp 0
push local 0
call Float.cos 1
pop local 1
push local 0
call Float.sin 1
pop local 2
push local 1
push this 9
call Float.mult 2
pop temp 0
push local 2
push this 9
call Float.mult 2
pop temp 0
push constant 3
push this 0
add
push local 3
push local 1
call Float.toInt 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push this 1
add
push local 4
push local 2
call Float.toInt 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
call Angle.dispose 1
pop temp 0
push local 1
call Float.dispose 1
pop temp 0
push local 2
call Float.dispose 1
pop temp 0
push constant 0
return
