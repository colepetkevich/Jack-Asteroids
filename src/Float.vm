function Float.init 0
push constant 4
pop static 0
push constant 0
return
function Float.new 0
push constant 2
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push constant 0
pop this 1
push pointer 0
call Float.normalize 1
pop temp 0
push pointer 0
return
function Float.new1 8
push constant 2
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 0
push constant 0
pop this 1
push constant 0
pop local 0
push argument 0
call String.length 1
pop local 1
push constant 0
pop local 7
push local 1
pop local 3
label WHILE_EXP0
push local 0
push local 1
lt
not
if-goto WHILE_END0
push argument 0
push local 0
call String.charAt 2
pop local 5
push local 7
not
push local 5
push constant 48
gt
and
push local 5
push constant 58
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 7
push local 0
pop local 2
label IF_FALSE0
push local 5
push constant 46
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
pop local 3
label IF_FALSE1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 3
push local 2
sub
push static 0
sub
pop this 1
push local 2
push local 3
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 1
push constant 1
add
pop this 1
label IF_FALSE2
push local 2
pop local 0
push static 0
push constant 1
sub
pop local 4
label WHILE_EXP1
push local 0
push local 1
lt
push local 4
push constant 1
neg
gt
and
not
if-goto WHILE_END1
push argument 0
push local 0
call String.charAt 2
pop local 5
push local 5
push constant 47
gt
push local 5
push constant 58
lt
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 5
push constant 48
sub
pop local 6
push this 0
push local 6
push constant 10
push local 4
call Float.pow 2
call Math.multiply 2
add
pop this 0
push local 4
push constant 1
sub
pop local 4
label IF_FALSE3
push local 0
push constant 1
add
push local 1
lt
push local 4
push constant 1
neg
eq
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push argument 0
push local 0
push constant 1
add
call String.charAt 2
pop local 5
push local 0
push constant 2
add
push local 1
lt
push local 5
push constant 46
eq
and
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push argument 0
push local 0
push constant 2
add
call String.charAt 2
pop local 5
label IF_FALSE5
push local 5
push constant 52
gt
push local 5
push constant 58
lt
and
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push this 0
push constant 1
add
pop this 0
label IF_FALSE6
label IF_FALSE4
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 0
gt
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push argument 0
push constant 0
call String.charAt 2
push constant 45
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push this 0
neg
pop this 0
label IF_FALSE8
label IF_FALSE7
push argument 0
call String.dispose 1
pop temp 0
push pointer 0
return
function Float.new2 0
push constant 2
call Memory.alloc 1
pop pointer 0
push argument 0
call Float.getNumber 1
pop this 0
push argument 0
call Float.getOrderOfMagnitude 1
pop this 1
push pointer 0
return
function Float.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Float.getPrecision 0
push static 0
return
function Float.getNumber 0
push argument 0
pop pointer 0
push this 0
return
function Float.getOrderOfMagnitude 0
push argument 0
pop pointer 0
push this 1
return
function Float.print 0
push argument 0
pop pointer 0
push this 0
call Output.printInt 1
pop temp 0
push constant 4
call String.new 1
push constant 42
call String.appendChar 2
push constant 49
call String.appendChar 2
push constant 48
call String.appendChar 2
push constant 94
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 1
call Output.printInt 1
pop temp 0
push constant 0
return
function Float.toInt 2
push argument 0
pop pointer 0
push this 0
pop local 0
push this 1
pop local 1
push this 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push local 1
push constant 0
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 6
call Sys.error 1
pop temp 0
label IF_FALSE1
label WHILE_EXP0
push local 1
push constant 0
lt
not
if-goto WHILE_END0
push local 1
push constant 1
neg
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
call Float.roundTo10 1
pop local 0
label IF_FALSE2
push local 0
push constant 10
call Math.divide 2
pop local 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function Float.eq 0
push argument 0
pop pointer 0
push this 0
push argument 1
call Float.getNumber 1
eq
push this 1
push argument 1
call Float.getOrderOfMagnitude 1
eq
and
return
function Float.gt 0
push argument 0
pop pointer 0
push this 1
push argument 1
call Float.getOrderOfMagnitude 1
eq
push this 0
push argument 1
call Float.getNumber 1
gt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push this 0
push constant 1
neg
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
call Float.getNumber 1
push constant 0
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
return
goto IF_END2
label IF_FALSE2
push this 1
push argument 1
call Float.getOrderOfMagnitude 1
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 0
push argument 1
call Float.getNumber 1
gt
return
label IF_FALSE3
label IF_END2
goto IF_END1
label IF_FALSE1
push argument 1
call Float.getNumber 1
push constant 0
lt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 1
push argument 1
call Float.getOrderOfMagnitude 1
lt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
not
return
label IF_FALSE5
label IF_FALSE4
label IF_END1
push constant 0
return
function Float.neg 0
push argument 0
pop pointer 0
push this 0
neg
pop this 0
push constant 0
return
function Float.add 1
push argument 0
pop pointer 0
push this 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
call Float.getNumber 1
pop this 0
push argument 1
call Float.getOrderOfMagnitude 1
pop this 1
push constant 0
return
label IF_FALSE0
push argument 1
call Float.getNumber 1
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push pointer 0
push argument 1
call Float.getNumber 1
push argument 1
call Float.getOrderOfMagnitude 1
call Float.normalizeFloats 3
pop local 0
push this 0
push local 0
add
pop this 0
push pointer 0
call Float.normalize 1
pop temp 0
push constant 0
return
function Float.sub 1
push argument 0
pop pointer 0
push this 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
call Float.getNumber 1
neg
pop this 0
push argument 1
call Float.getOrderOfMagnitude 1
pop this 1
push constant 0
return
label IF_FALSE0
push argument 1
call Float.getNumber 1
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push pointer 0
push argument 1
call Float.getNumber 1
push argument 1
call Float.getOrderOfMagnitude 1
call Float.normalizeFloats 3
pop local 0
push this 0
push local 0
sub
pop this 0
push pointer 0
call Float.normalize 1
pop temp 0
push constant 0
return
function Float.mult 0
push argument 0
pop pointer 0
push this 0
push constant 0
eq
push argument 1
call Float.getNumber 1
push constant 0
eq
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop this 0
push constant 3
neg
pop this 1
push constant 0
return
label IF_FALSE0
push this 0
push constant 10
call Math.divide 2
call Float.roundTo10 1
push constant 10
call Math.divide 2
push argument 1
call Float.getNumber 1
push constant 10
call Math.divide 2
call Float.roundTo10 1
push constant 10
call Math.divide 2
call Math.multiply 2
pop this 0
push this 1
push argument 1
call Float.getOrderOfMagnitude 1
add
push constant 4
add
pop this 1
push pointer 0
call Float.normalize 1
pop temp 0
push constant 0
return
function Float.div 0
push argument 0
pop pointer 0
push this 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 3
neg
pop this 1
push constant 0
return
label IF_FALSE0
push argument 1
call Float.getNumber 1
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 3
call Sys.errorCode 1
pop temp 0
label IF_FALSE1
push this 0
push argument 1
call Float.getNumber 1
push constant 10
call Math.divide 2
call Float.roundTo10 1
push constant 10
call Math.divide 2
call Math.divide 2
pop this 0
push this 1
push argument 1
call Float.getOrderOfMagnitude 1
sub
push constant 2
sub
pop this 1
push pointer 0
call Float.normalize 1
pop temp 0
push constant 0
return
function Float.normalizeFloats 0
push argument 0
pop pointer 0
push this 1
push argument 2
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
label WHILE_EXP0
push this 1
push argument 2
eq
not
not
if-goto WHILE_END0
push argument 1
push constant 10
call Math.divide 2
pop argument 1
push argument 2
push constant 1
add
pop argument 2
goto WHILE_EXP0
label WHILE_END0
label IF_FALSE0
push this 1
push argument 2
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
label WHILE_EXP1
push this 1
push argument 2
eq
not
not
if-goto WHILE_END1
push this 0
push constant 10
call Math.divide 2
pop this 0
push this 1
push constant 1
add
pop this 1
goto WHILE_EXP1
label WHILE_END1
label IF_FALSE1
push argument 1
return
function Float.normalize 0
push argument 0
pop pointer 0
push this 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 3
neg
pop this 1
push constant 0
return
label IF_FALSE0
push this 0
push constant 9999
gt
push this 0
push constant 9999
neg
lt
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
call Float.roundTo10 1
pop this 0
push this 0
push constant 10
call Math.divide 2
pop this 0
push this 1
push constant 1
add
pop this 1
label IF_FALSE1
label WHILE_EXP0
push this 0
push constant 0
gt
push this 0
push constant 1000
lt
and
push this 0
push constant 0
lt
push this 0
push constant 1000
neg
gt
and
or
not
if-goto WHILE_END0
push this 0
push constant 10
call Math.multiply 2
pop this 0
push this 1
push constant 1
sub
pop this 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Float.sin 7
push argument 0
call Angle.toFloat 1
call Float.new2 1
pop local 0
push constant 6
call Float.new 1
pop local 4
push constant 120
call Float.new 1
pop local 5
push constant 5040
call Float.new 1
pop local 6
push local 0
call Float.new2 1
pop local 1
push local 1
push local 0
call Float.mult 2
pop temp 0
push local 1
push local 0
call Float.mult 2
pop temp 0
push local 1
call Float.new2 1
pop local 2
push local 2
push local 0
call Float.mult 2
pop temp 0
push local 2
push local 0
call Float.mult 2
pop temp 0
push local 2
call Float.new2 1
pop local 3
push local 3
push local 0
call Float.mult 2
pop temp 0
push local 3
push local 0
call Float.mult 2
pop temp 0
push local 1
push local 4
call Float.div 2
pop temp 0
push local 2
push local 5
call Float.div 2
pop temp 0
push local 3
push local 6
call Float.div 2
pop temp 0
push local 0
push local 1
call Float.sub 2
pop temp 0
push local 0
push local 2
call Float.add 2
pop temp 0
push local 0
push local 3
call Float.sub 2
pop temp 0
push local 1
call Float.dispose 1
pop temp 0
push local 2
call Float.dispose 1
pop temp 0
push local 3
call Float.dispose 1
pop temp 0
push local 4
call Float.dispose 1
pop temp 0
push local 5
call Float.dispose 1
pop temp 0
push local 6
call Float.dispose 1
pop temp 0
push local 0
return
function Float.cos 2
push argument 0
call Angle.new1 1
pop local 0
push local 0
call Angle.halfPi 0
call Angle.rotate 2
pop temp 0
push local 0
call Float.sin 1
pop local 1
push local 0
call Angle.dispose 1
pop temp 0
push local 1
return
function Float.roundTo10 0
push argument 0
push constant 1
neg
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push argument 0
push constant 10
call Math.divide 2
push constant 10
call Math.multiply 2
sub
push constant 4
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 0
push constant 10
add
pop argument 0
label IF_FALSE1
goto IF_END0
label IF_FALSE0
push argument 0
push argument 0
push constant 10
call Math.divide 2
push constant 10
call Math.multiply 2
sub
push constant 4
neg
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 0
push constant 10
sub
pop argument 0
label IF_FALSE2
label IF_END0
push argument 0
return
function Float.pow 1
push argument 0
pop local 0
push argument 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
pop local 0
label IF_FALSE0
label WHILE_EXP0
push argument 1
push constant 1
gt
not
if-goto WHILE_END0
push local 0
push argument 0
call Math.multiply 2
pop local 0
push argument 1
push constant 1
sub
pop argument 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
